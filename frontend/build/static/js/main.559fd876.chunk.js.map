{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","components/Meta.js","breakpoints.js","components/LineMenu.js","components/Services.js","profileImages/blackgirl.jpg","profileImages/blackboy.jpg","components/AffiliatesMenu.js","components/Affiliates.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","screens/ResetPasswordScreen.js","screens/SetNewPasswordScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","USER_PASSWORD_RESET_EMAIL_REQUEST","USER_PASSWORD_RESET_EMAIL_SUCCESS","USER_PASSWORD_RESET_EMAIL_FAIL","USER_UPDATE_PASSWORD_REQUEST","USER_UPDATE_PASSWORD_SUCCESS","USER_UPDATE_PASSWORD_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","userPasswordResetEmail","userUpdatePassword","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","className","inline","Control","name","onChange","target","value","placeholder","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","SignatureWrapper","styled","div","SocialWrapper","Footer","Row","Col","href","rel","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","active","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","Carousel","fade","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","size","xs","sm","lg","device","PanelContent","TabContent","p","breakpoint","LineMenu","ServicesMainWrapper","ServicesContentWrapper","Services","AboutPicWrapper","MainWrapper","AboutTextWrapper","ImageWrapper","img","AffiliatesMenu","blackgirlImage","blackboyImage","AffiliatesMainWrapper","AffiliatesContentWrapper","Affiliates","HomeScreen","match","params","Tabs","defaultActiveKey","Tab","eventKey","category","toUpperCase","md","xl","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","errorProductReview","alert","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","vlue","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","placeOrderHandler","createOrder","index","OrderScreen","orderId","momoNumber","setMomoNumber","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPaypalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","submitHandler","momoInfo","order_id","payerNumber","reqAmount","console","log","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","brand","ProductEditScreen","setPrice","setImage","cloudinaryId","setCloudinaryId","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","secure_url","public_id","updateProduct","File","custom","hidden","OrderListScreen","ResetPasswordScreen","passwordResetEmail","SetNewPasswordScreen","updatePassword","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.559fd876.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\n\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM';\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS';\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD';","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n\nexport const USER_PASSWORD_RESET_EMAIL_REQUEST = 'USER_PASSWORD_RESET_EMAIL_REQUEST'\nexport const USER_PASSWORD_RESET_EMAIL_SUCCESS = 'USER_PASSWORD_RESET_EMAIL_SUCCESS'\nexport const USER_PASSWORD_RESET_EMAIL_FAIL = 'USER_PASSWORD_RESET_EMAIL_FAIL'\n\nexport const USER_UPDATE_PASSWORD_REQUEST = 'USER_UPDATE_PASSWORD_REQUEST'\nexport const USER_UPDATE_PASSWORD_SUCCESS = 'USER_UPDATE_PASSWORD_SUCCESS'\nexport const USER_UPDATE_PASSWORD_FAIL = 'USER_UPDATE_PASSWORD_FAIL'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport {\n    productListReducer,\n    productDetailsReducer,\n    productDeleteReducer,\n    productCreateReducer,\n    productUpdateReducer,\n    productReviewCreateReducer,\n    productTopRatedReducer,\n} from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport {\n    userLoginReducer,\n    userRegisterReducer,\n    userDetailsReducer,\n    userUpdateProfileReducer,\n    userListReducer,\n    userDeleteReducer,\n    userUpdateReducer,\n    userPasswordResetEmailReducer,\n    userUpdatePasswordReducer\n} from './reducers/userReducers';\nimport {\n    orderCreateReducer,\n    orderDetailsReducer,\n    orderPayReducer,\n    orderListMyReducer,\n    orderListReducer,\n    orderDeliverReducer\n} from './reducers/orderReducers';\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    productDelete: productDeleteReducer,\n    productCreate: productCreateReducer,\n    productUpdate: productUpdateReducer,\n    productReviewCreate: productReviewCreateReducer,\n    productTopRated: productTopRatedReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    userList: userListReducer,\n    userDelete: userDeleteReducer,\n    userUpdate: userUpdateReducer,\n    userPasswordResetEmail: userPasswordResetEmailReducer,\n    userUpdatePassword: userUpdatePasswordReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderListMy: orderListMyReducer,\n    orderList: orderListReducer,\n    orderDeliver: orderDeliverReducer,\n});\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\n\nconst initialState = {\n    cart: { cartItems: cartItemsFromStorage, shippingAddress: shippingAddressFromStorage },\n    userLogin: { userInfo: userInfoFromStorage }\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\n\nexport default store\n","import {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_CREATE_RESET,\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_UPDATE_RESET,\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n    PRODUCT_CREATE_REVIEW_RESET,\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n} from '../constants/productConstants';\n\nexport const productListReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case PRODUCT_LIST_REQUEST:\n            return { loading: true, products: [] }\n        case PRODUCT_LIST_SUCCESS:\n            return {\n                loading: false,\n                products: action.payload.products,\n                pages: action.payload.pages,\n                page: action.payload.page,\n            }\n        case PRODUCT_LIST_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\n    switch (action.type) {\n        case PRODUCT_DETAILS_REQUEST:\n            return { loading: true, ...state }\n        case PRODUCT_DETAILS_SUCCESS:\n            return { loading: false, product: action.payload }\n        case PRODUCT_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\nexport const productDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_DELETE_REQUEST:\n            return { loading: true }\n        case PRODUCT_DELETE_SUCCESS:\n            return { loading: false, success: true }\n        case PRODUCT_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\nexport const productCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_CREATE_REQUEST:\n            return { loading: true }\n        case PRODUCT_CREATE_SUCCESS:\n            return { loading: false, success: true, product: action.payload }\n        case PRODUCT_CREATE_FAIL:\n            return { loading: false, error: action.payload }\n        case PRODUCT_CREATE_RESET:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n        case PRODUCT_UPDATE_REQUEST:\n            return { loading: true }\n        case PRODUCT_UPDATE_SUCCESS:\n            return { loading: false, success: true, product: action.payload }\n        case PRODUCT_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n        case PRODUCT_UPDATE_RESET:\n            return { product: {} }\n        default:\n            return state\n    }\n}\n\nexport const productReviewCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_CREATE_REVIEW_REQUEST:\n            return { loading: true }\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\n            return { loading: false, success: true }\n        case PRODUCT_CREATE_REVIEW_FAIL:\n            return { loading: false, error: action.payload }\n        case PRODUCT_CREATE_REVIEW_RESET:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case PRODUCT_TOP_REQUEST:\n            return { loading: true, products: [] }\n        case PRODUCT_TOP_SUCCESS:\n            return { loading: false, products: action.payload }\n        case PRODUCT_TOP_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n","import {\n    CART_ADD_ITEM,\n    CART_REMOVE_ITEM,\n    CART_SAVE_PAYMENT_METHOD,\n    CART_SAVE_SHIPPING_ADDRESS\n} from '../constants/cartConstants';\n\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\n    switch (action.type) {\n        case CART_ADD_ITEM:\n            const item = action.payload;\n\n            const existItem = state.cartItems.find(x => x.product === item.product);\n\n            if (existItem) {\n                return {\n                    ...state,\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n                }\n            } else {\n                return {\n                    ...state,\n                    cartItems: [...state.cartItems, item]\n                }\n            }\n        case CART_REMOVE_ITEM:\n            return {\n                ...state,\n                cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n            }\n        case CART_SAVE_SHIPPING_ADDRESS:\n            return {\n                ...state,\n                shippingAddress: action.payload,\n            }\n        case CART_SAVE_PAYMENT_METHOD:\n            return {\n                ...state,\n                paymentMethod: action.payload,\n            }\n        default:\n            return state\n    }\n}","import {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_DETAILS_RESET,\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_RESET,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n    USER_PASSWORD_RESET_EMAIL_REQUEST,\n    USER_PASSWORD_RESET_EMAIL_SUCCESS,\n    USER_PASSWORD_RESET_EMAIL_FAIL,\n    USER_UPDATE_PASSWORD_REQUEST,\n    USER_UPDATE_PASSWORD_SUCCESS,\n    USER_UPDATE_PASSWORD_FAIL,\n} from '../constants/userConstants';\n\nexport const userLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return { loading: true }\n        case USER_LOGIN_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n        case USER_LOGIN_FAIL:\n            return { loading: false, error: action.payload }\n        case USER_LOGOUT:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return { loading: true }\n        case USER_REGISTER_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n        case USER_REGISTER_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_DETAILS_REQUEST:\n            return { ...state, loading: true }\n        case USER_DETAILS_SUCCESS:\n            return { loading: false, user: action.payload }\n        case USER_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n        case USER_DETAILS_RESET:\n            return { user: {} }\n        default:\n            return state\n    }\n}\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_UPDATE_PROFILE_REQUEST:\n            return { loading: true }\n        case USER_UPDATE_PROFILE_SUCCESS:\n            return { loading: false, success: true, userInfo: action.payload }\n        case USER_UPDATE_PROFILE_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\nexport const userListReducer = (state = { users: [] }, action) => {\n    switch (action.type) {\n        case USER_LIST_REQUEST:\n            return { loading: true }\n        case USER_LIST_SUCCESS:\n            return { loading: false, users: action.payload }\n        case USER_LIST_FAIL:\n            return { loading: false, error: action.payload }\n        case USER_LIST_RESET:\n            return { users: [] }\n        default:\n            return state\n    }\n}\n\nexport const userDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_DELETE_REQUEST:\n            return { loading: true }\n        case USER_DELETE_SUCCESS:\n            return { loading: false, success: true }\n        case USER_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_UPDATE_REQUEST:\n            return { loading: true }\n        case USER_UPDATE_SUCCESS:\n            return { loading: false, success: true }\n        case USER_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n        case USER_UPDATE_RESET:\n            return { user: {} }\n        default:\n            return state\n    }\n}\n\nexport const userPasswordResetEmailReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_PASSWORD_RESET_EMAIL_REQUEST:\n            return { loading: true }\n        case USER_PASSWORD_RESET_EMAIL_SUCCESS:\n            return { loading: false, success: true, userInfo: action.payload }\n        case USER_PASSWORD_RESET_EMAIL_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\nexport const userUpdatePasswordReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_UPDATE_PASSWORD_REQUEST:\n            return { loading: true }\n        case USER_UPDATE_PASSWORD_SUCCESS:\n            return { loading: false, success: true, user: action.payload }\n        case USER_UPDATE_PASSWORD_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n","import {\n    ORDER_CREATE_FAIL,\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET\n} from '../constants/orderConstants';\n\nexport const orderCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_CREATE_REQUEST:\n            return { loading: true }\n        case ORDER_CREATE_SUCCESS:\n            return { loading: false, success: true, order: action.payload }\n        case ORDER_CREATE_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\n    switch (action.type) {\n        case ORDER_DETAILS_REQUEST:\n            return { ...state, loading: true }\n        case ORDER_DETAILS_SUCCESS:\n            return { loading: false, order: action.payload }\n        case ORDER_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\nexport const orderPayReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_PAY_REQUEST:\n            return { loading: true }\n        case ORDER_PAY_SUCCESS:\n            return { loading: false, success: true }\n        case ORDER_PAY_FAIL:\n            return { loading: false, error: action.payload }\n        case ORDER_PAY_RESET:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const orderDeliverReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_DELIVER_REQUEST:\n            return { loading: true }\n        case ORDER_DELIVER_SUCCESS:\n            return { loading: false, success: true }\n        case ORDER_DELIVER_FAIL:\n            return { loading: false, error: action.payload }\n        case ORDER_DELIVER_RESET:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case ORDER_LIST_MY_REQUEST:\n            return { loading: true }\n        case ORDER_LIST_MY_SUCCESS:\n            return { loading: false, orders: action.payload }\n        case ORDER_LIST_MY_FAIL:\n            return { loading: false, error: action.payload }\n        case ORDER_LIST_MY_RESET:\n            return { orders: [] }\n        default:\n            return state\n    }\n}\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case ORDER_LIST_REQUEST:\n            return { loading: true }\n        case ORDER_LIST_SUCCESS:\n            return { loading: false, orders: action.payload }\n        case ORDER_LIST_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}","import React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\n\nconst SearchBox = ({ history }) => {\n    const [keyword, setKeyword] = useState('');\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if(keyword.trim()) {\n            history.push(`/search/${keyword}`);\n        } else {\n            history.push('/');\n        }\n    }\n\n    return (\n        <Form onSubmit={submitHandler} className='d-flex' inline>\n            <Form.Control\n                type='text'\n                name='q'\n                onChange={(e) => setKeyword(e.target.value)}\n                placeholder='Search Products...'\n                className='mr-sm-2 ml-sm-5'\n            ></Form.Control>\n            <Button type='submit' variant='outline-success' className='p-2'>Search</Button>\n        </Form>\n    )\n}\n\nexport default SearchBox\n","import {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n    USER_PASSWORD_RESET_EMAIL_REQUEST,\n    USER_PASSWORD_RESET_EMAIL_SUCCESS,\n    USER_PASSWORD_RESET_EMAIL_FAIL,\n    USER_UPDATE_PASSWORD_REQUEST,\n    USER_UPDATE_PASSWORD_SUCCESS,\n    USER_UPDATE_PASSWORD_FAIL,\n} from '../constants/userConstants';\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\nimport axios from 'axios';\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({ type: USER_LOGIN_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/users/login', { email, password }, config)\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: ORDER_LIST_MY_RESET })\n    dispatch({ type: USER_LIST_RESET })\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({ type: USER_REGISTER_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/users', { name, email, password }, config)\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data,\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data,\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: USER_DETAILS_REQUEST })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/users/${id}`, config)\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: USER_UPDATE_PROFILE_REQUEST })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        }\n\n        const { data } = await axios.put(`/api/users/profile`, user, config)\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({ type: USER_LIST_REQUEST })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        }\n\n        const { data } = await axios.get(`/api/users`, config)\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: USER_DELETE_REQUEST })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        }\n\n        await axios.delete(`/api/users/${id}`, config)\n\n        dispatch({ type: USER_DELETE_SUCCESS, })\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: USER_UPDATE_REQUEST })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        }\n\n        const { data } = await axios.put(`/api/users/${user._id}`, user, config)\n\n        dispatch({ type: USER_UPDATE_SUCCESS, })\n\n        dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const passwordResetEmail = (email) => async (dispatch) => {\n    try {\n        dispatch({ type: USER_PASSWORD_RESET_EMAIL_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }\n\n        const { data } = await axios.post('/api/users/resetpassword', { email }, config)\n\n\n        dispatch({ type: USER_PASSWORD_RESET_EMAIL_SUCCESS, payload: data })\n\n    } catch (error) {\n        dispatch({\n            type: USER_PASSWORD_RESET_EMAIL_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const updatePassword = (user, token) => async (dispatch) => {\n    try {\n        dispatch({ type: USER_UPDATE_PASSWORD_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`,\n            }\n        }\n\n        const { data } = await axios.put(`/api/users/reset/${user.id}`, user, config)\n\n        dispatch({\n            type: USER_UPDATE_PASSWORD_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PASSWORD_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Container, Navbar, Nav, NavDropdown } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport SearchBox from './SearchBox';\nimport { logout } from '../actions/userActions';\n\nconst Header = () => {\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n\n    return (\n        <header>\n            <Navbar bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to=\"/\">\n                        <Navbar.Brand>Anansesɛm</Navbar.Brand>\n                    </LinkContainer>\n                    <Navbar.Toggle aria-controls='basic-navbar-nav' />\n                    <Navbar.Collapse id='basic-navbar-nav'>\n                        <Route render={({ history }) => <SearchBox history={history} />} />\n                        <Nav className='ms-auto'>\n                            <LinkContainer to='/cart'>\n                                <Nav.Link><i className='fas fa-shopping-cart'></i>Cart</Nav.Link>\n                            </LinkContainer>\n                            {userInfo ? <NavDropdown title={userInfo.name} id='username'>\n                                <LinkContainer to='/profile'>\n                                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                                </LinkContainer>\n                                <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n                            </NavDropdown> : (\n                                <LinkContainer to='/login'>\n                                    <Nav.Link><i className='fas fa-user'></i>Sign In</Nav.Link>\n                                </LinkContainer>\n                            )}\n                            {userInfo && userInfo.isAdmin && (\n                                <NavDropdown title='Admin' id='adminmenu'>\n                                    <LinkContainer to='/admin/userlist'>\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\n                                    </LinkContainer>\n                                    <LinkContainer to='/admin/productlist'>\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\n                                    </LinkContainer>\n                                    <LinkContainer to='/admin/orderlist'>\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\n                                    </LinkContainer>\n                                </NavDropdown>\n                            )}\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap';\nimport styled from \"styled-components\";\n\nconst SignatureWrapper = styled.div`\n    padding: 0 0 .5rem 0;\n    font-size: .87rem;\n    opacity: .4;\n`;\n\nconst SocialWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n\n    >a {\n        margin-right: 10px;\n        font-size: 1.5rem;\n    }\n`;\n\nconst Footer = () => {\n    return (\n        <footer>\n            <Container>\n                <hr />\n                <Row>\n                    <Col>\n                        <Row><h5>Contact</h5></Row>\n                        <Row className='py-n3'><p><i className='fas fa-phone'></i>: +233 20 904 4823</p></Row>\n                        <Row className='mt-n3'><p><i className='fas fa-envelope'></i>: <a href='mailto:ananses3mwear@gmail.com'>anansesm@gmail.com</a></p></Row>\n                    </Col>\n                </Row>\n                <Row className='mt-n2'>\n                    <SocialWrapper>\n                        <a href=\"https://www.facebook.com/search/top?q=ananses3m%20wear\" target=\"_blank\" rel=\"noreferrer\"><i className='fab fa-facebook-square'></i></a>\n                        <a href=\"https://www.instagram.com/ananses3mwear/?hl=en\" target=\"_blank\" rel=\"noreferrer\"><i className='fab fa-instagram'></i></a>\n                        <a href=\"https://twitter.com/ananses3mwear?lang=en\" target=\"_blank\" rel=\"noreferrer\"><i className='fab fa-twitter-square'></i></a>\n                    </SocialWrapper>\n                </Row>\n                <Row className='text-center'>\n                    <SignatureWrapper><h6>Copyright &copy; Anansesɛm | Developed by Kwaku Appau-Nkansah</h6></SignatureWrapper>\n                </Row>\n            </Container>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Rating = ({ value, text, color }) => {\n    return (\n        <div className='rating'>\n            <span>\n                <i style={{color}} className={value >= 1 ? 'fas fa-star' : value >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span>\n            <span>\n                <i style={{color}} className={value >= 2 ? 'fas fa-star' : value >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span>\n            <span>\n                <i style={{color}} className={value >= 3 ? 'fas fa-star' : value >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span>\n            <span>\n                <i style={{color}} className={value >= 4 ? 'fas fa-star' : value >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span>\n            <span>\n                <i style={{color}} className={value >= 5 ? 'fas fa-star' : value >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span>\n            <span>{text && text}</span>\n        </div>\n    )\n}\n\nRating.defaultProps = {\n    color: 'orange',\n}\n\nRating.propTypes = {\n    value: PropTypes.number.isRequired,\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string,\n}\n\nexport default Rating\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card } from 'react-bootstrap';\nimport Rating from './Rating';\n\nconst Product = ({ product }) => {\n    return (\n        <Card className='my-3 p-3 rounded'>\n            <Link to={`/product/${product._id}`}>\n                <Card.Img src={product.image} variant='top' />\n            </Link>\n\n            <Card.Body>\n            <Link to={`/product/${product._id}`}>\n                <Card.Title as='div'><strong>{product.name}</strong></Card.Title>\n            </Link>\n\n            <Card.Text as='div'>\n                <Rating value={product.rating} text={`${product.numReviews} reviews`} />\n            </Card.Text>\n\n            <Card.Text as='h3'>GH¢{product.price}</Card.Text>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default Product\n","import React from 'react'\nimport { Alert } from 'react-bootstrap';\n\nconst Message = ({ variant, children }) => {\n    return (\n        <Alert variant={variant}>{children}</Alert>\n    )\n}\n\nMessage.defaultProps = {\n    variant: 'info',\n}\n\nexport default Message\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap';\n\nconst Loader = () => {\n    return (\n        <Spinner animation='border' role='status' style={{ width: '100px', height: '100px', margin: 'auto', display: 'block'}}>\n            <span className='sr-only'>Loading...</span>\n        </Spinner>\n    )\n}\n\nexport default Loader\n","import React from 'react';\nimport { Pagination } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\n    return pages > 1 && (\n        <Pagination>\n            {[...Array(pages).keys()].map(x => (\n                <LinkContainer\n                    key={x + 1}\n                    to={!isAdmin\n                        ? keyword\n                            ? `/search/${keyword}/page/${x + 1}`\n                            : `/page/${x + 1}`\n                        : `/admin/productlist/${x + 1}`}>\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n                </LinkContainer>\n            ))}\n        </Pagination>\n    )\n}\n\nexport default Paginate\n","import {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n} from '../constants/productConstants';\nimport axios from 'axios';\n\n\nexport const listProducts = (keyword = '', pageNumber = '') => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/products/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: PRODUCT_DELETE_REQUEST, })\n\n        const { userLogin: { userInfo }, } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        }\n\n        await axios.delete(`/api/products/${id}`, config)\n\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const createProduct = () => async (dispatch, getState) => {\n    try {\n        dispatch({ type: PRODUCT_CREATE_REQUEST, })\n\n        const { userLogin: { userInfo }, } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        }\n\n        const { data } = await axios.post(`/api/products`, {}, config)\n\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: PRODUCT_UPDATE_REQUEST, })\n\n        const { userLogin: { userInfo }, } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        }\n\n        const { data } = await axios.put(`/api/products/${product._id}`, product, config)\n\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: PRODUCT_CREATE_REVIEW_REQUEST, })\n\n        const { userLogin: { userInfo }, } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        }\n\n        await axios.post(`/api/products/${productId}/reviews`, review, config)\n\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_TOP_REQUEST })\n\n        const { data } = await axios.get(`/api/products/top`)\n\n        dispatch({\n            type: PRODUCT_TOP_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_TOP_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Carousel, Image } from 'react-bootstrap';\nimport Loader from './Loader';\nimport Message from './Message';\nimport { listTopProducts } from '../actions/productActions';\n\nconst ProductCarousel = () => {\n    const dispatch = useDispatch();\n\n    const productTopRated = useSelector(state => state.productTopRated);\n    const { loading, error, products } = productTopRated;\n\n    useEffect(() => {\n        dispatch(listTopProducts());\n    }, [dispatch])\n\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\n        <Carousel fade pause='hover' className='bg-dark'>\n            {products.map((product) => (\n                <Carousel.Item key={product._id}>\n                    <Link to={`/product/${product._id}`}>\n                        <Image src={product.image} alt={product.name} fluid />\n                        <Carousel.Caption className='carousel-caption'>\n                            <h2>{product.name} (GH¢{product.price})</h2>\n                        </Carousel.Caption>\n                    </Link>\n                </Carousel.Item>\n            ))}\n        </Carousel>\n    )\n}\n\nexport default ProductCarousel\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\n\nconst Meta = ({ title, description, keywords }) => {\n    return (\n        <Helmet>\n            <title>{title}</title>\n            <meta name='description' content={description} />\n            <meta name='keywords' content={keywords} />\n        </Helmet>\n    )\n}\n\nMeta.defaultProps = {\n    title: 'Welcome to Anansesɛm wear',\n    description: 'We offer the best for less',\n    keywords: 'clothing, graphic designing, printing'\n}\n\nexport default Meta\n","const size = {\n    xs: '320px',\n    sm: '768px',\n    lg: '1200px',\n}\n\nconst device = {\n    xs: `(max-width: ${size.xs})`,\n    sm: `(max-width: ${size.sm})`,\n    lg: `(max-width: ${size.lg})`\n}\n// eslint-disable-next-line\nexport default { size, device }","import React from 'react';\nimport '../index.css';\nimport styled from \"styled-components\";\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport breakpoint from '../breakpoints';\n\nconst PanelContent = styled.div``;\n\nconst TabContent = styled.p`\n    @media only screen and ${breakpoint.device.xs}{\n        font-size: .9rem;\n    }\n`;\n\nconst LineMenu = () => {\n    return (\n        <Tabs>\n            <TabList>\n                <Tab>\n                    <TabContent><h5>Graphic Design</h5></TabContent>\n                </Tab>\n                <Tab>\n                    <TabContent><h5>Paper Bags</h5></TabContent>\n                </Tab>\n                <Tab>\n                    <TabContent><h5>Screen Printing</h5></TabContent>\n                </Tab>\n                <Tab>\n                    <TabContent><h5>Other Printing</h5></TabContent>\n                </Tab>\n                <Tab>\n                    <TabContent><h5>Others</h5></TabContent>\n                </Tab>\n                {/* <Tab>\n                    <TabContent>Rogmoth</TabContent>\n                </Tab>\n                <Tab>\n                    <TabContent>Volunteer</TabContent>\n                </Tab> */}\n            </TabList>\n\n            <TabPanel>\n                <PanelContent>\n                    <h1>Designs here</h1>\n                    {/* <FlexSim /> */}\n                </PanelContent>\n            </TabPanel>\n            <TabPanel>\n                <PanelContent>\n                    <h1>Content here</h1>\n                    {/* <LDSChurch /> */}\n                </PanelContent>\n            </TabPanel>\n            <TabPanel>\n                <PanelContent>\n                    <h1>Designs Prints here</h1>\n                    {/* <BuildingFit /> */}\n                </PanelContent>\n            </TabPanel>\n            <TabPanel>\n                <PanelContent>\n                    <h1>Designs Images here</h1>\n                    {/* <BYUIAudio /> */}\n                </PanelContent>\n            </TabPanel>\n            <TabPanel>\n                <PanelContent>\n                    <h1>Designs Works here</h1>\n                    {/* <ExcessEra /> */}\n                </PanelContent>\n            </TabPanel>\n            {/* <TabPanel> */}\n                {/* <PanelContent> */}\n                    {/* <Rogmoth /> */}\n                {/* </PanelContent> */}\n            {/* </TabPanel> */}\n            {/* <TabPanel> */}\n                {/* <PanelContent> */}\n                    {/* <Volunteer /> */}\n                {/* </PanelContent> */}\n            {/* </TabPanel> */}\n        </Tabs>\n    );\n}\n\n\n\nexport default LineMenu;\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport styled from \"styled-components\";\nimport LineMenu from './LineMenu';\n\nconst ServicesMainWrapper = styled.div`\n    // background: #343A40;\n    padding: 3vw 0px 3vw 0px;\n`;\n\nconst ServicesContentWrapper = styled.div``;\n\nconst Services = () => {\n    return (\n        <ServicesMainWrapper>\n                <Container>\n                    <ServicesContentWrapper>\n                        <LineMenu />\n                    </ServicesContentWrapper>\n                </Container>\n        </ServicesMainWrapper>\n    )\n}\n\nexport default Services\n","export default __webpack_public_path__ + \"static/media/blackgirl.8799a16f.jpg\";","export default __webpack_public_path__ + \"static/media/blackboy.78de24da.jpg\";","import React from 'react';\nimport '../index.css';\nimport styled from \"styled-components\";\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport breakpoint from '../breakpoints';\nimport blackgirlImage from '../profileImages/blackgirl.jpg';\nimport blackboyImage from '../profileImages/blackboy.jpg';\n\nconst TabContent = styled.p`\n    @media only screen and ${breakpoint.device.xs}{\n        font-size: .9rem;\n    }\n`;\n\nconst AboutPicWrapper = styled.div`\n    max-width: 200px;\n    margin: 0 0 0 2vw;\n`;\n\nconst MainWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n\n    @media only screen and ${breakpoint.device.sm}{\n        flex-direction: column-reverse;\n    }\n`;\n\nconst AboutTextWrapper = styled.div`\n    // Present for flex property reasons\n`;\n\nconst ImageWrapper = styled.img`\n    height: auto;\n    max-width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    border-radius: 50%;\n    box-shadow: 0 6px 10px rgba(0, 0, 0, 0.123), 0 0 6px rgba(0, 0, 0, 0.151);\n\n    // filter: grayscale(100%);\n\n    &:hover {\n        filter: none;\n    }\n\n    @media only screen and ${breakpoint.device.sm}{\n        max-width: 60%;\n        display: block;\n        margin-left: auto;\n        margin-right: auto;\n    }\n`;\n\nconst AffiliatesMenu = () => {\n    return (\n        <Tabs>\n            <TabList>\n                <Tab>\n                    <TabContent><h5>Black Girl</h5></TabContent>\n                </Tab>\n                <Tab>\n                    <TabContent><h5>Black Boy</h5></TabContent>\n                </Tab>\n                <Tab>\n                    <TabContent><h5>Pink Boy</h5></TabContent>\n                </Tab>\n                <Tab>\n                    <TabContent><h5>Pink Girl</h5></TabContent>\n                </Tab>\n                <Tab>\n                    <TabContent><h5>Rainbow</h5></TabContent>\n                </Tab>\n            </TabList>\n\n            <TabPanel>\n                    <MainWrapper>\n                        <AboutTextWrapper>\n                            <h1>The text and link here</h1>\n                        </AboutTextWrapper>\n                        <AboutPicWrapper>\n                            <ImageWrapper src={blackgirlImage} alt=\"Black Girl Picture\" />\n                        </AboutPicWrapper>\n                    </MainWrapper>\n            </TabPanel>\n            <TabPanel>\n                    <MainWrapper>\n                        <AboutTextWrapper>\n                            <h1>Some cool text and link here</h1>\n                        </AboutTextWrapper>\n                        <AboutPicWrapper>\n                            <ImageWrapper src={blackboyImage} alt=\"Black Boy Picture\" />\n                        </AboutPicWrapper>\n                    </MainWrapper>\n            </TabPanel>\n            <TabPanel>\n                    <MainWrapper>\n                        <AboutTextWrapper>\n                            <h1>Shege Pink text and link here</h1>\n                        </AboutTextWrapper>\n                        <AboutPicWrapper>\n                            <ImageWrapper src={blackgirlImage} alt=\"Black Girl Picture\" />\n                        </AboutPicWrapper>\n                    </MainWrapper>\n            </TabPanel>\n            <TabPanel>\n                    <MainWrapper>\n                        <AboutTextWrapper>\n                            <h1>The text and link here</h1>\n                        </AboutTextWrapper>\n                        <AboutPicWrapper>\n                            <ImageWrapper src={blackboyImage} alt=\"Black Boy Picture\" />\n                        </AboutPicWrapper>\n                    </MainWrapper>\n            </TabPanel>\n            <TabPanel>\n                    <MainWrapper>\n                        <AboutTextWrapper>\n                            <h1>The text and link here</h1>\n                        </AboutTextWrapper>\n                        <AboutPicWrapper>\n                            <ImageWrapper src={blackgirlImage} alt=\"Black Girl Picture\" />\n                        </AboutPicWrapper>\n                    </MainWrapper>\n            </TabPanel>\n        </Tabs>\n    );\n}\n\n\n\nexport default AffiliatesMenu;\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport styled from \"styled-components\";\n// import breakpoint from '../breakpoints';\nimport AffiliatesMenu from './AffiliatesMenu';\n\nconst AffiliatesMainWrapper = styled.div`\n    padding: 3vw 0px 3vw 0px;\n`;\n\nconst AffiliatesContentWrapper = styled.div``;\n\nconst Affiliates = () => {\n    return (\n        <AffiliatesMainWrapper>\n                <Container>\n                    <AffiliatesContentWrapper>\n                        <AffiliatesMenu />\n                    </AffiliatesContentWrapper>\n                </Container>\n        </AffiliatesMainWrapper>\n    )\n}\n\nexport default Affiliates\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, Tabs, Tab } from 'react-bootstrap';\nimport Product from '../components/Product';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport Paginate from '../components/Paginate';\nimport ProductCarousel from '../components/ProductCarousel';\nimport Meta from '../components/Meta';\nimport Services from '../components/Services';\nimport Affiliates from '../components/Affiliates';\nimport { listProducts } from '../actions/productActions';\n\nconst HomeScreen = ({ match }) => {\n    const keyword = match.params.keyword;\n\n    const pageNumber = match.params.pageNumber || 1;\n\n    const dispatch = useDispatch();\n\n    const productList = useSelector(state => state.productList);\n    const { loading, error, products, pages, page } = productList;\n\n    useEffect(() => {\n        dispatch(listProducts(keyword, pageNumber))\n    }, [dispatch, keyword, pageNumber])\n\n    return (\n        <>\n            <Meta />\n            {!keyword ? <ProductCarousel /> : <Link to='/' className='btn btn-light'>Go Back</Link>} <br />\n            {/* <h1>Latest Products</h1>\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\n                <>\n                    <Row>\n                        {products.map((product) => (\n                            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                                <Product product={product} />\n                            </Col>\n                        ))}\n                    </Row>\n                    <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''} />\n                </>\n            )} */}\n\n            <Tabs defaultActiveKey=\"newArrivals\" className=\"mb-3\">\n                <Tab eventKey=\"newArrivals\" title=\"New Arrivals\">\n                    {/* <h1>Latest Products</h1> */}\n                    {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\n                        <>\n                            <Row>\n                                {products.filter(product => product.category.toUpperCase() === 'NEW WELE')\n                                    .map((product) => (\n                                        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                                            <Product product={product} />\n                                        </Col>\n                                    ))}\n                            </Row>\n                            <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''} />\n                        </>\n                    )}\n                </Tab>\n                <Tab eventKey=\"tshirts\" title=\"T Shirts\">\n                    {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\n                        <>\n                            <Row>\n                                {products.filter(product => product.category.toUpperCase() === 'T SHIRTS')\n                                    .map((product) => (\n                                        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                                            <Product product={product} />\n                                        </Col>\n                                    ))}\n                            </Row>\n                            <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''} />\n                        </>\n                    )}\n                </Tab>\n                <Tab eventKey=\"longSleeves\" title=\"Long Sleeves\">\n                    {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\n                        <>\n                            <Row>\n                                {products.filter(product => product.category.toUpperCase() === 'LONG SLEEVES / HOODIES')\n                                    .map((product) => (\n                                        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                                            <Product product={product} />\n                                        </Col>\n                                    ))}\n                            </Row>\n                            <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''} />\n                        </>\n                    )}\n                </Tab>\n                <Tab eventKey=\"capSeries\" title=\"Cap Series\">\n                    {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\n                        <>\n                            <Row>\n                                {products.filter(product => product.category.toUpperCase() === 'CAP SERIES')\n                                    .map((product) => (\n                                        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                                            <Product product={product} />\n                                        </Col>\n                                    ))}\n                            </Row>\n                            <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''} />\n                        </>\n                    )}\n                </Tab>\n                <Tab eventKey=\"services\" title=\"Services\">\n                    <Services />\n                </Tab>\n                <Tab eventKey=\"affiliates\" title=\"Affiliates\">\n                    <Affiliates />\n                </Tab>\n            </Tabs>\n        </>\n    )\n}\n\nexport default HomeScreen\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap';\nimport Rating from '../components/Rating';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport Meta from '../components/Meta';\nimport { listProductDetails, createProductReview } from '../actions/productActions';\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants';\n\nconst ProductScreen = ({ history, match }) => {\n    const [qty, setQty] = useState(1);\n    const [rating, setRating] = useState(0);\n    const [comment, setComment] = useState('');\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails);\n    const { loading, error, product } = productDetails;\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const productReviewCreate = useSelector(state => state.productReviewCreate);\n    const { success: successProductReview, error: errorProductReview } = productReviewCreate;\n\n    useEffect(() => {\n        if (successProductReview) {\n            alert('Review Submitted!');\n            setRating(0);\n            setComment('');\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\n        }\n        dispatch(listProductDetails(match.params.id))\n    }, [dispatch, match, successProductReview]);\n\n    const addToCartHandler = () => {\n        history.push(`/cart/${match.params.id}?qty=${qty}`);\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(createProductReview(match.params.id, {\n            rating,\n            comment\n        }))\n    }\n\n    return (\n        <>\n            <Link className='btn btn-light my-3' to='/'>Go Back</Link>\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\n                <>\n                    <Meta title={product.name} />\n                    <Row>\n                        <Col md={6}>\n                            <Image src={product.image} alt={product.name} fluid />\n                        </Col>\n                        <Col md={3}>\n                            <ListGroup variant='flush'>\n                                <ListGroup.Item>\n                                    <h3>{product.name}</h3>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    <Rating value={product.rating} text={`${product.numReviews} reviews`} />\n                                </ListGroup.Item>\n                                <ListGroup.Item>Price: GH¢{product.price}</ListGroup.Item>\n                                <ListGroup.Item>Description: {product.description}</ListGroup.Item>\n                            </ListGroup>\n                        </Col>\n                        <Col md={3}>\n                            <Card>\n                                <ListGroup variant='flush'>\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Price:</Col>\n                                            <Col>\n                                                <strong>GH¢{product.price}</strong>\n                                            </Col>\n                                        </Row>\n                                    </ListGroup.Item>\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Status:</Col>\n                                            <Col>\n                                                {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\n                                            </Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    {product.countInStock > 0 && (\n                                        <ListGroup.Item>\n                                            <Row>\n                                                <Col>Qty:</Col>\n                                                <Col>\n                                                    <Form.Control as='select' value={qty} onChange={(e) => setQty(e.target.value)}>\n                                                        {[...Array(product.countInStock).keys()].map((x) => (\n                                                            <option key={x + 1} value={x + 1}>\n                                                                {x + 1}\n                                                            </option>\n                                                        ))}\n                                                    </Form.Control>\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    )}\n\n                                    <ListGroup.Item>\n                                        <Button onClick={addToCartHandler} className='btn w-100' type='button' disabled={product.countInStock === 0}>\n                                            Add To Cart\n                                        </Button>\n                                    </ListGroup.Item>\n                                </ListGroup>\n                            </Card>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md={6}>\n                            <h2>Reviews</h2>\n                            {product.reviews.length === 0 && <Message>No reviews</Message>}\n                            <ListGroup variant='flush'>\n                                {product.reviews.map((review) => (\n                                    <ListGroup.Item key={review._id}>\n                                        <strong>{review.name}</strong>\n                                        <Rating value={review.rating} />\n                                        <p>{review.createdAt.substring(0, 10)}</p>\n                                        <p>{review.comment}</p>\n                                    </ListGroup.Item>\n                                ))}\n                                <ListGroup.Item>\n                                    <h2>Write a customer review</h2>\n                                    {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\n                                    {userInfo ? (\n                                        <Form onSubmit={submitHandler}>\n                                            <Form.Group controlId='rating'>\n                                                <Form.Label>Rating</Form.Label>\n                                                <Form.Control as='select' vlue={rating} onChange={(e) => setRating(e.target.value)}>\n                                                    <option value=''>Select...</option>\n                                                    <option value='1'>1 - Poor</option>\n                                                    <option value='2'>2 - Fair</option>\n                                                    <option value='3'>3 - Good</option>\n                                                    <option value='4'>4 - Very Good</option>\n                                                    <option value='5'>5 - Excellent</option>\n                                                </Form.Control>\n                                            </Form.Group>\n                                            <Form.Group controlId='comment'>\n                                                <Form.Label>Comment</Form.Label>\n                                                <Form.Control\n                                                    as='textarea'\n                                                    row='3'\n                                                    vlue={comment}\n                                                    onChange={(e) => setComment(e.target.value)}>\n                                                </Form.Control>\n                                            </Form.Group>\n                                            <Button type='submit' variant='primary'>Submit</Button>\n                                        </Form>\n                                    ) : <Message>Please <Link to='/login'>sign in</Link> to write a review</Message>}\n                                </ListGroup.Item>\n                            </ListGroup>\n                        </Col>\n                    </Row>\n                </>\n            )}\n        </>\n    )\n}\n\nexport default ProductScreen\n","import {\n    CART_ADD_ITEM,\n    CART_REMOVE_ITEM,\n    CART_SAVE_SHIPPING_ADDRESS,\n    CART_SAVE_PAYMENT_METHOD\n} from '../constants/cartConstants';\nimport axios from 'axios';\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n\n    const { data } = await axios.get(`/api/products/${id}`)\n\n    dispatch({\n        type: CART_ADD_ITEM,\n        payload: {\n            product: data._id,\n            name: data.name,\n            image: data.image,\n            price: data.price,\n            countInStock: data.countInStock,\n            qty\n        }\n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n    dispatch({\n        type: CART_REMOVE_ITEM,\n        payload: id\n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_SHIPPING_ADDRESS,\n        payload: data,\n    })\n\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_PAYMENT_METHOD,\n        payload: data,\n    })\n\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\n}","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap';\nimport Message from '../components/Message';\nimport { addToCart, removeFromCart } from '../actions/cartActions';\n\nconst CartScreen = ({ match, location, history }) => {\n    const productId = match.params.id;\n\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1;\n\n    const dispatch = useDispatch();\n\n    const cart = useSelector(state => state.cart);\n    const { cartItems } = cart;\n\n    useEffect(() => {\n        if (productId) {\n            dispatch(addToCart(productId, qty))\n        }\n    }, [dispatch, productId, qty])\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id));\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n    }\n\n    return (\n        <Row>\n            <Col md={8}>\n                <h1>Shopping Cart</h1>\n                {cartItems.length === 0 ? (<Message>Your cart is empty. <Link to='/'>Go back</Link></Message>) : (\n                    <ListGroup variant='flush'>\n                        {cartItems.map(item => (\n                            <ListGroup.Item key={item.product}>\n                                <Row>\n                                    <Col md={2}>\n                                        <Image src={item.image} alt={item.name} fluid rounded />\n                                    </Col>\n                                    <Col md={3}>\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                    </Col>\n                                    <Col md={2}>\n                                        GH¢{item.price}\n                                    </Col>\n                                    <Col md={2}>\n                                        <Form.Control as='select' value={item.qty} onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}>\n                                            {[...Array(item.countInStock).keys()].map((x) => (\n                                                <option key={x + 1} value={x + 1}>\n                                                    {x + 1}\n                                                </option>\n                                            ))}\n                                        </Form.Control>\n                                    </Col>\n                                    <Col md={2}>\n                                        <Button type='button' variant='light' onClick={() => removeFromCartHandler(item.product)}><i className='fas fa-trash'></i></Button>\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n                        ))}\n                    </ListGroup>\n                )}\n            </Col>\n            <Col md={4}>\n                <Card>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\n                            GH¢{cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <Button type='button' className='btn-block w-100' disabled={cartItems.length === 0} onClick={checkoutHandler}>Proceed To Checkout</Button>\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nexport default CartScreen\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst FormContainer = ({ children }) => {\n    return (\n        <Container>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FormContainer\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Button, Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { login } from '../actions/userActions';\n\nconst LoginScreen = ({ location, history }) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { loading, error, userInfo } = userLogin;\n\n    const redirect = location.search ? location.search.split('=')[1] : '/';\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(login(email, password))\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control type='email' placeholder='Enter email' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type='password' placeholder='Enter password' value={password} onChange={(e) => setPassword(e.target.value)}></Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>Sign In</Button>\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    New Customer?{' '}<Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Register</Link>\n                </Col>\n                <Row>\n                    <Col>\n                        Forgot password?{' '}<Link to='/resetpassword'>Reset</Link>\n                    </Col>\n                </Row>\n            </Row>\n        </FormContainer>\n    )\n}\n\nexport default LoginScreen\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Button, Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { register } from '../actions/userActions';\n\nconst RegisterScreen = ({ location, history }) => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [message, setMessage] = useState(null);\n\n    const dispatch = useDispatch();\n\n    const userRegister = useSelector(state => state.userRegister);\n    const { loading, error, userInfo } = userRegister;\n\n    const redirect = location.search ? location.search.split('=')[1] : '/';\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(register(name, email, password))\n        }\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign Up</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control type='name' placeholder='Enter name' value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control type='email' placeholder='Enter email' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type='password' placeholder='Enter password' value={password} onChange={(e) => setPassword(e.target.value)}></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='confirmPassword'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control type='password' placeholder='Confirm password' value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}></Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>Register</Button>\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    Have an Account?{' '}<Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Login</Link>\n                </Col>\n            </Row>\n        </FormContainer>\n    )\n}\n\nexport default RegisterScreen\n","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Form, Table } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\nimport { listMyOrders } from '../actions/orderActions';\n\nconst ProfileScreen = ({ location, history }) => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [message, setMessage] = useState(null);\n\n    const dispatch = useDispatch();\n\n    const userDetails = useSelector(state => state.userDetails);\n    const { loading, error, user } = userDetails;\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n    const { success } = userUpdateProfile;\n\n    const orderListMy = useSelector(state => state.orderListMy);\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user.name) {\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(updateUserProfile({ id: user._id, name, email, password }))\n        }\n    }\n\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>User Profile</h2>\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {success && <Message variant='success'>Profile updated</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n                    <Form.Group controlId='name'>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control type='name' placeholder='Enter name' value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control type='email' placeholder='Enter email' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type='password' placeholder='Enter password' value={password} onChange={(e) => setPassword(e.target.value)}></Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='confirmPassword'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control type='password' placeholder='Confirm password' value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}></Form.Control>\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary'>Update</Button>\n                </Form>\n            </Col>\n            <Col md={9}>\n                <h2>My Orders</h2>\n                {loadingOrders ? <Loader /> : errorOrders ? <Message variant='danger'>{errorOrders}</Message> : (\n                    <Table striped bordered hover responsive className='table-sm'>\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>DATE</th>\n                                <th>TOTAL</th>\n                                <th>PAID</th>\n                                <th>DELIVERED</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {orders.map((order) => (\n                                <tr key={order._id}>\n                                    <td>{order._id}</td>\n                                    <td>{order.createdAt.substring(0, 10)}</td>\n                                    <td>{order.totalPrice}</td>\n                                    <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\n                                        <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                    )}\n                                    </td>\n                                    <td>{order.isDelivered ? order.deliveredAt.substring(0, 10) : (\n                                        <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                    )}\n                                    </td>\n                                    <td>\n                                        <LinkContainer to={`/order/${order._id}`}>\n                                            <Button className='btn-sm' variant='light'>Details</Button>\n                                        </LinkContainer>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                )}\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProfileScreen\n","import {\n    ORDER_CREATE_FAIL,\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n} from '../constants/orderConstants';\nimport axios from 'axios';\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: ORDER_CREATE_REQUEST, })\n\n        const { userLogin: { userInfo }, } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        }\n\n        const { data } = await axios.post(`/api/orders`, order, config)\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: ORDER_DETAILS_REQUEST, })\n\n        const { userLogin: { userInfo }, } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        }\n\n        const { data } = await axios.get(`/api/orders/${id}`, config)\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: ORDER_PAY_REQUEST, })\n\n        const { userLogin: { userInfo }, } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        }\n\n        const { data } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config)\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: ORDER_DELIVER_REQUEST, })\n\n        const { userLogin: { userInfo }, } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        }\n\n        const { data } = await axios.put(`/api/orders/${order._id}/deliver`, {}, config)\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({ type: ORDER_LIST_MY_REQUEST, })\n\n        const { userLogin: { userInfo }, } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        }\n\n        const { data } = await axios.get(`/api/orders/myorders`, config)\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({ type: ORDER_LIST_REQUEST, })\n\n        const { userLogin: { userInfo }, } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        }\n\n        const { data } = await axios.get(`/api/orders`, config)\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}","import React from 'react';\nimport { Nav } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\n    return (\n        <Nav className='justify-content-center mb-4'>\n            <Nav.Item>\n                {step1 ? (\n                    <LinkContainer to='/login'>\n                        <Nav.Link>Sign In</Nav.Link>\n                    </LinkContainer>\n                ) : (<Nav.Link disabled>Sign In</Nav.Link>)}\n            </Nav.Item>\n            \n            <Nav.Item>\n                {step2 ? (\n                    <LinkContainer to='/shipping'>\n                        <Nav.Link>Shipping</Nav.Link>\n                    </LinkContainer>\n                ) : (<Nav.Link disabled>Shipping</Nav.Link>)}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step3 ? (\n                    <LinkContainer to='/payment'>\n                        <Nav.Link>Payment</Nav.Link>\n                    </LinkContainer>\n                ) : (<Nav.Link disabled>Payment</Nav.Link>)}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step4 ? (\n                    <LinkContainer to='/placeorder'>\n                        <Nav.Link>Place Order</Nav.Link>\n                    </LinkContainer>\n                ) : (<Nav.Link disabled>Place Order</Nav.Link>)}\n            </Nav.Item>\n        </Nav>\n    )\n}\n\nexport default CheckoutSteps\n","import React, { useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { saveShippingAddress } from '../actions/cartActions';\n\nconst ShippingScreen = ({ history }) => {\n    const cart = useSelector(state => state.cart);\n    const { shippingAddress } = cart;\n\n    const [address, setAddress] = useState(shippingAddress.address);\n    const [city, setCity] = useState(shippingAddress.city);\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n    const [country, setCountry] = useState(shippingAddress.country);\n\n    const dispatch = useDispatch();\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(saveShippingAddress({ address, city, postalCode, country }));\n        history.push('/payment');\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='address'>\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control type='text' placeholder='Enter address' value={address} required onChange={(e) => setAddress(e.target.value)}></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='city'>\n                    <Form.Label>City</Form.Label>\n                    <Form.Control type='text' placeholder='Enter city' value={city} required onChange={(e) => setCity(e.target.value)}></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='postalCode'>\n                    <Form.Label>Postal Code</Form.Label>\n                    <Form.Control type='text' placeholder='Enter postal code' value={postalCode} required onChange={(e) => setPostalCode(e.target.value)}></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='country'>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control type='text' placeholder='Enter country' value={country} required onChange={(e) => setCountry(e.target.value)}></Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>Continue</Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen\n","import React, { useState } from 'react';\nimport { Button, Form, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { savePaymentMethod } from '../actions/cartActions';\n\nconst PaymentScreen = ({ history }) => {\n    const cart = useSelector(state => state.cart);\n    const { shippingAddress } = cart;\n\n    if (!shippingAddress) {\n        history.push('/shipping');\n    }\n\n    const [paymentMethod, setPaymentMethod] = useState('Paypal');\n\n    const dispatch = useDispatch();\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(savePaymentMethod(paymentMethod));\n        history.push('/placeorder');\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n            <h1>Payment Method</h1>\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Select Method</Form.Label>\n                    <Col>\n                        <Form.Check type='radio'\n                            label='PayPal or Credit Card'\n                            id='PayPal'\n                            name='paymentMethod'\n                            value='PayPal'\n                            checked\n                            onChange={(e) => setPaymentMethod(e.target.value)}>\n                        </Form.Check>\n\n                        {/* <Form.Check type='radio'\n                            label='Stripe'\n                            id='Stripe'\n                            name='paymentMethod'\n                            value='Stripe'\n                            onChange={(e) => setPaymentMethod(e.target.value)}>\n                        </Form.Check> */}\n\n                        <Form.Check type='radio'\n                            label='MTN Mobile Money'\n                            id='MobileMoney'\n                            name='paymentMethod'\n                            value='MobileMoney'\n                            onChange={(e) => setPaymentMethod(e.target.value)}>\n                        </Form.Check>\n                    </Col>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default PaymentScreen\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { createOrder } from '../actions/orderActions';\n\nconst PlaceOrderScreen = ({ history }) => {\n    const dispatch = useDispatch();\n\n    const cart = useSelector(state => state.cart);\n\n\n    // Calculate prices\n    const addDecimals = (num) => {\n        return (Math.round(num * 100) / 100).toFixed(2)\n    }\n\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0))\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\n\n    const orderCreate = useSelector(state => state.orderCreate);\n    const { order, success, error } = orderCreate;\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/order/${order._id}`)\n        }\n        // eslint-disable-next-line\n    }, [history, success]);\n\n\n    const placeOrderHandler = () => {\n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n        }))\n    }\n\n    return (\n        <>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n                            <p>\n                                <strong>Address: </strong>\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\n                                {cart.shippingAddress.postalCode},{' '}\n                                {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <strong>Method: </strong>\n                            {cart.paymentMethod}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {cart.cartItems.length === 0 ? <Message>Your cart is empty</Message> : (\n                                <ListGroup variant='flush'>\n                                    {cart.cartItems.map((item, index) => (\n                                        <ListGroup.Item key={index}>\n                                            <Row>\n                                                <Col md={1}>\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\n                                                </Col>\n                                                <Col>\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                </Col>\n                                                <Col md={4}>\n                                                    {item.qty} x GH¢{item.price} = GH¢{item.qty * item.price}\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))}\n                                </ListGroup>\n                            )}\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='fluid'>\n                            <ListGroup.Item><h2>Order Summary</h2></ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items</Col>\n                                    <Col>GH¢{cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping</Col>\n                                    <Col>GH¢{cart.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax</Col>\n                                    <Col>GH¢{cart.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total</Col>\n                                    <Col>GH¢{cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Button type='button' className='btn-block w-100' disabled={cart.cartItems === 0} onClick={() => placeOrderHandler()}>\n                                    Place Order\n                                </Button>\n                            </ListGroup.Item>\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nexport default PlaceOrderScreen\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { PayPalButton } from 'react-paypal-button-v2';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, ListGroup, Image, Card, Button, Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions';\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants';\n\nconst OrderScreen = ({ match, history }) => {\n    const orderId = match.params.id;\n\n    const [momoNumber, setMomoNumber] = useState('');\n    const [sdkReady, setSdkReady] = useState(false);\n\n    const dispatch = useDispatch();\n\n    const orderDetails = useSelector(state => state.orderDetails);\n    const { order, loading, error } = orderDetails;\n\n    const orderPay = useSelector(state => state.orderPay);\n    const { loading: loadingPay, success: successPay } = orderPay;\n\n    const orderDeliver = useSelector(state => state.orderDeliver);\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    if (!loading) {\n        // Calculate prices\n        const addDecimals = (num) => {\n            return (Math.round(num * 100) / 100).toFixed(2)\n        }\n\n        order.itemsPrice = addDecimals(order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0))\n    }\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login');\n        }\n        const addPaypalScript = async () => {\n            const { data: clientId } = await axios.get('/api/config/paypal');\n            const script = document.createElement('script');\n            script.type = 'text/javascript'\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\n            script.async = true\n            script.onload = () => {\n                setSdkReady(true)\n            }\n            document.body.appendChild(script);\n        }\n\n        if (!order || successPay || successDeliver) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch({ type: ORDER_DELIVER_RESET })\n            dispatch(getOrderDetails(orderId))\n        } else if (!order.isPaid) {\n            if (!window.paypal) {\n                addPaypalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n\n\n    }, [dispatch, orderId, successPay, order, successDeliver, history, userInfo]);\n\n    const successPaymentHandler = (paymentResult) => {\n        console.log(paymentResult)\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order))\n    }\n\n    const submitHandler = async (e) => {\n        // e.preventDefault();\n        // dispatch(saveShippingAddress({ address, city, postalCode, country }));\n        // history.push('/payment');\n\n        const momoInfo = {\n            order_id: order._id,\n            payerNumber: momoNumber,\n            reqAmount: order.totalPrice\n        }\n        const { data } = await axios.post('/api/config/momo', momoInfo);\n\n        console.log('Front Momo Response: ', data)\n    }\n\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : <>\n        <h1>Order {order._id}</h1>\n        <Row>\n            <Col md={8}>\n                <ListGroup variant='flush'>\n                    <ListGroup.Item>\n                        <h2>Shipping</h2>\n                        <p><strong>Name: </strong> {order.user.name}</p>\n                        <p><strong>Email: </strong> <a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\n                        <p>\n                            <strong>Address: </strong>\n                            {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\n                            {order.shippingAddress.postalCode},{' '}\n                            {order.shippingAddress.country}\n                        </p>\n                        {order.isDelivered ? <Message variant='success'>Delivered on {order.deliveredAt.substring(0, 10)}</Message> : <Message variant='danger'>Not Delivered</Message>}\n                    </ListGroup.Item>\n\n                    <ListGroup.Item>\n                        <h2>Payment Method</h2>\n                        <p>\n                            <strong>Method: </strong>\n                            {order.paymentMethod}\n                        </p>\n                        {order.isPaid ? <Message variant='success'>Paid on {order.paidAt.substring(0, 10)}</Message> : <Message variant='danger'>Not Paid</Message>}\n                    </ListGroup.Item>\n\n                    <ListGroup.Item>\n                        <h2>Order Items</h2>\n                        {order.orderItems.length === 0 ? <Message>Order is empty</Message> : (\n                            <ListGroup variant='flush'>\n                                {order.orderItems.map((item, index) => (\n                                    <ListGroup.Item key={index}>\n                                        <Row>\n                                            <Col md={1}>\n                                                <Image src={item.image} alt={item.name} fluid rounded />\n                                            </Col>\n                                            <Col>\n                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                            </Col>\n                                            <Col md={4}>\n                                                {item.qty} x GH¢{item.price} = GH¢{item.qty * item.price}\n                                            </Col>\n                                        </Row>\n                                    </ListGroup.Item>\n                                ))}\n                            </ListGroup>\n                        )}\n                    </ListGroup.Item>\n                </ListGroup>\n            </Col>\n            <Col md={4}>\n                <Card>\n                    <ListGroup variant='fluid'>\n                        <ListGroup.Item><h2>Order Summary</h2></ListGroup.Item>\n                        <ListGroup.Item>\n                            <Row>\n                                <Col>Items</Col>\n                                <Col>GH¢{order.itemsPrice}</Col>\n                            </Row>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <Row>\n                                <Col>Shipping</Col>\n                                <Col>GH¢{order.shippingPrice}</Col>\n                            </Row>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <Row>\n                                <Col>Tax</Col>\n                                <Col>GH¢{order.taxPrice}</Col>\n                            </Row>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <Row>\n                                <Col>Total</Col>\n                                <Col>GH¢{order.totalPrice}</Col>\n                            </Row>\n                        </ListGroup.Item>\n                        {!order.isPaid && (\n                            <ListGroup.Item>\n                                {loadingPay && <Loader />}\n                                {!sdkReady ? <Loader /> : order.paymentMethod === 'MobileMoney' ? (\n                                    <Form onSubmit={submitHandler}>\n                                        <Form.Group controlId='momoNumber'>\n                                            <Form.Label><h5>Momo number</h5></Form.Label>\n                                            <Form.Control type='text' placeholder='Enter momo number' value={momoNumber} onChange={(e) => setMomoNumber(e.target.value)}></Form.Control>\n                                        </Form.Group>\n                                        <Button className='w-100' type='submit' variant='primary'>Pay with MOMO</Button>\n                                    </Form>\n                                ) : (\n                                    <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler} />\n                                )}\n                                {/* {!order.paymentMethod === 'MobileMoney' ? '' : (\n                                    <Form onSubmit={submitHandler}>\n                                        <Form.Group controlId='momoNumber'>\n                                            <Form.Label>Momo number</Form.Label>\n                                            <Form.Control type='text' placeholder='Enter momo number' value={momoNumber} onChange={(e) => setMomoNumber(e.target.value)}></Form.Control>\n                                        </Form.Group>\n                                        <Form.Group controlId='orderTotal'>\n                                            <Form.Control type='text' hidden value={order.totalPrice} readOnly ></Form.Control>\n                                        </Form.Group>\n                                        <Button className='w-100' type='submit' variant='primary'>Pay with MOMO</Button>\n                                    </Form>\n                                )} */}\n                            </ListGroup.Item>\n                        )}\n                        {loadingDeliver && <Loader />}\n                        {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                            <ListGroup.Item>\n                                <Button type='button' className='btn btn-block w-100' onClick={deliverHandler}>Mark As Delivered</Button>\n                            </ListGroup.Item>\n                        )}\n                    </ListGroup>\n                </Card>\n            </Col>\n        </Row>\n    </>\n}\n\nexport default OrderScreen\n","import React, { useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Button, Table } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { listUsers, deleteUser } from '../actions/userActions';\n\nconst UserListScreen = ({ history }) => {\n    const dispatch = useDispatch();\n\n    const userList = useSelector(state => state.userList);\n    const { loading, error, users } = userList;\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const userDelete = useSelector(state => state.userDelete);\n    const { success: successDelete } = userDelete;\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers());\n        } else {\n            history.push('/login');\n        }\n    }, [dispatch, userInfo, history, successDelete])\n\n    const deleteHandler = (id) => {\n        if (window.confirm('Are you sure?')) {\n            dispatch(deleteUser(id));\n        }\n    }\n\n    return (\n        <>\n            <h1>Users</h1>\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\n                <Table striped bordered hover responsive className='table-sm'>\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>NAME</th>\n                            <th>EMAIL</th>\n                            <th>ADMIN</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {users.map((user) => (\n                            <tr key={user._id}>\n                                <td>{user._id}</td>\n                                <td>{user.name}</td>\n                                <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\n                                <td>{user.isAdmin ? (<i className='fas fa-check' style={{ color: 'green' }}></i>) : (\n                                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                )}</td>\n                                <td>\n                                    <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                        <Button variant='light' className='btn-sm'>\n                                            <i className='fas fa-edit'></i>\n                                        </Button>\n                                    </LinkContainer>\n                                    <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                                        <i className='fas fa-trash'></i>\n                                    </Button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            )}\n        </>\n    )\n}\n\nexport default UserListScreen\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { getUserDetails, updateUser } from '../actions/userActions';\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\n\nconst UserEditScreen = ({ match, history }) => {\n    const userId = match.params.id;\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [isAdmin, setIsAdmin] = useState(false);\n\n    const dispatch = useDispatch();\n\n    const userDetails = useSelector(state => state.userDetails);\n    const { loading, error, user } = userDetails;\n\n    const userUpdate = useSelector(state => state.userUpdate);\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = userUpdate;\n\n    useEffect(() => {\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET });\n            history.push('/admin/userlist');\n        } else {\n            if (!user.name || user._id !== userId) {\n                dispatch(getUserDetails(userId));\n            } else {\n                setName(user.name);\n                setEmail(user.email);\n                setIsAdmin(user.isAdmin);\n            }\n        }\n\n    }, [dispatch, history, userId, user, successUpdate])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(updateUser({ _id: userId, name, email, isAdmin }));\n    }\n\n    return (\n        <>\n            <Link to='/admin/userlist' className='btn btn-light my-3'>Go Back</Link>\n            <FormContainer>\n                <h1>Edit User</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\n                    <Form onSubmit={submitHandler}>\n                        <Form.Group controlId='name'>\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control type='name' placeholder='Enter name' value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='email'>\n                            <Form.Label>Email Address</Form.Label>\n                            <Form.Control type='email' placeholder='Enter email' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='isAdmin'>\n                            <Form.Check type='checkbox' label='Is Admin' checked={isAdmin} onChange={(e) => setIsAdmin(e.target.checked)}></Form.Check>\n                        </Form.Group>\n\n                        <Button type='submit' variant='primary'>Update</Button>\n                    </Form>\n                )}\n            </FormContainer>\n        </>\n\n    )\n}\n\nexport default UserEditScreen\n","import React, { useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Button, Table, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport Paginate from '../components/Paginate';\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions';\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants';\n\nconst ProductListScreen = ({ history, match }) => {\n    const pageNumber = match.params.pageNumber || 1;\n\n    const dispatch = useDispatch();\n\n    const productList = useSelector((state) => state.productList);\n    const { loading, error, products, page, pages } = productList;\n\n    const productDelete = useSelector((state) => state.productDelete);\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete;\n\n    const productCreate = useSelector((state) => state.productCreate);\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate;\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    useEffect(() => {\n        dispatch({ type: PRODUCT_CREATE_RESET });\n\n        if ((userInfo && !userInfo.isAdmin) || (userInfo === null) || !userInfo) {\n            history.push('/login');\n        }\n\n        if (successCreate) {\n            history.push(`/admin/product/${createdProduct._id}/edit`)\n        } else {\n            dispatch(listProducts('', pageNumber));\n        }\n\n    }, [dispatch, userInfo, history, successDelete, successCreate, createdProduct, pageNumber])\n\n    const deleteHandler = (id) => {\n        if (window.confirm('Are you sure?')) {\n            dispatch(deleteProduct(id));\n        }\n    }\n\n    const createProductHandler = () => {\n        dispatch(createProduct());\n    }\n\n    return (\n        <>\n            <Row className='align-items-center'>\n                <Col>\n                    <h1>Products</h1>\n                </Col>\n                <Col className='text-right'>\n                    <Button className='my-3' onClick={createProductHandler}>\n                        <i className='fas fa-plus'></i> Create Product\n                    </Button>\n                </Col>\n            </Row>\n            {loadingDelete && <Loader />}\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n            {loadingCreate && <Loader />}\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\n                <>\n                    <Table striped bordered hover responsive className='table-sm'>\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>NAME</th>\n                                <th>PRICE</th>\n                                <th>CATEGORY</th>\n                                <th>BRAND</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {products.map((product) => (\n                                <tr key={product._id}>\n                                    <td>{product._id}</td>\n                                    <td>{product.name}</td>\n                                    <td>GH¢{product.price}</td>\n                                    <td>{product.category}</td>\n                                    <td>{product.brand}</td>\n                                    <td>\n                                        <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                                            <Button variant='light' className='btn-sm'>\n                                                <i className='fas fa-edit'></i>\n                                            </Button>\n                                        </LinkContainer>\n                                        <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\n                                            <i className='fas fa-trash'></i>\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                    <Paginate pages={pages} page={page} isAdmin={true} />\n                </>\n            )}\n        </>\n    )\n}\n\nexport default ProductListScreen\n","import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { listProductDetails, updateProduct } from '../actions/productActions';\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\n\nconst ProductEditScreen = ({ match, history }) => {\n    const productId = match.params.id;\n\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState(0);\n    const [image, setImage] = useState('');\n    const [cloudinaryId, setCloudinaryId] = useState('');\n    const [brand, setBrand] = useState('');\n    const [category, setCategory] = useState('');\n    const [countInStock, setCountInStock] = useState(0);\n    const [description, setDescription] = useState('');\n    const [uploading, setUploading] = useState(false);\n\n    const dispatch = useDispatch();\n\n    const productDetails = useSelector(state => state.productDetails);\n    const { loading, error, product } = productDetails;\n\n    const productUpdate = useSelector(state => state.productUpdate);\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = productUpdate;\n\n    useEffect(() => {\n        if (successUpdate) {\n            dispatch({ type: PRODUCT_UPDATE_RESET });\n            history.push('/admin/productlist');\n        } else {\n            if (!product.name || product._id !== productId) {\n                dispatch(listProductDetails(productId));\n            } else {\n                setName(product.name);\n                setPrice(product.price);\n                setImage(product.image);\n                setCloudinaryId(product.cloudinaryId);\n                setCategory(product.category);\n                setBrand(product.brand);\n                setCountInStock(product.countInStock);\n                setDescription(product.description);\n            }\n        }\n\n    }, [dispatch, history, productId, product, successUpdate])\n\n    // Cloudinary configuration\n    // const uploadFileHandler = async (e) => {\n    //     const file = e.target.files[0];\n    //     const reader = new FileReader();\n    //     reader.readAsDataURL(file);\n    //     setUploading(true);\n\n    //     reader.onloadend = async () => {\n    //         try {\n    //             const config = {\n    //                 headers: {\n    //                     'Content-Type': 'application/json'\n    //                 }\n    //             }\n\n    //             const { data } = await axios.post('/api/upload', { imageString: reader.result }, config);\n\n    //             console.log('Data Image: ', data)\n    //             setImage(data.public_id);\n    //             setUploading(false);\n    //         } catch (error) {\n    //             console.error('Product Edit: ', error.response.data);\n    //             setUploading(false);\n    //         }\n    //     };\n    // }\n\n    // Multer configuration\n    const uploadFileHandler = async (e) => {\n        const file = e.target.files[0];\n        const formData = new FormData();\n        formData.append('image', file);\n        setUploading(true);\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            }\n\n            const { data } = await axios.post('/api/upload', formData, config);\n\n            setImage(data.secure_url);\n            setCloudinaryId(data.public_id);\n            setUploading(false);\n        } catch (error) {\n            console.error(error);\n            setUploading(false);\n        }\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(updateProduct({ _id: productId, name, price, image, cloudinaryId, brand, category, description, countInStock }));\n    }\n\n    return (\n        <>\n            <Link to='/admin/productlist' className='btn btn-light my-3'>Go Back</Link>\n            <FormContainer>\n                <h1>Edit Product</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\n                    <Form onSubmit={submitHandler}>\n                        <Form.Group controlId='name'>\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control type='name' placeholder='Enter name' value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='price'>\n                            <Form.Label>Price</Form.Label>\n                            <Form.Control type='number' placeholder='Enter price' value={price} onChange={(e) => setPrice(e.target.value)}></Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='image'>\n                            <Form.Label>Image</Form.Label>\n                            <Form.Control type='text' placeholder='Enter image url' value={image} onChange={(e) => setImage(e.target.value)}></Form.Control>\n                            <Form.File id='image-file' label='Choose File' custom onChange={uploadFileHandler}></Form.File>\n                            {uploading && <Loader />}\n                        </Form.Group>\n\n                        <Form.Group controlId='cloudinaryId'>\n                            <Form.Control type='text' hidden value={cloudinaryId} onChange={(e) => setCloudinaryId(e.target.value)} ></Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='brand'>\n                            <Form.Label>Brand</Form.Label>\n                            <Form.Control type='text' placeholder='Enter brand' value={brand} onChange={(e) => setBrand(e.target.value)}></Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='countInStock'>\n                            <Form.Label>Count In Stock</Form.Label>\n                            <Form.Control type='number' placeholder='Enter count in stock' value={countInStock} onChange={(e) => setCountInStock(e.target.value)}></Form.Control>\n                        </Form.Group>\n\n                        {/* <Form.Group controlId='category'>\n                            <Form.Label>Category</Form.Label>\n                            <Form.Control type='text' placeholder='Enter category' value={category} onChange={(e) => setCategory(e.target.value)}></Form.Control>\n                        </Form.Group> */}\n\n                        <Form.Group controlId='category'>\n                            <Form.Label>Category</Form.Label>\n                            <Form.Control as='select' value={category} onChange={(e) => setCategory(e.target.value)}>\n                                <option value=''>Select...</option>\n                                <option value='New Wele'>New Wele</option>\n                                <option value='T Shirts'>T Shirts</option>\n                                <option value='Long Sleeves / Hoodies'>Long Sleeves / Hoodies</option>\n                                <option value='Cap Series'>Cap Series</option>\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='description'>\n                            <Form.Label>Description</Form.Label>\n                            <Form.Control type='text' placeholder='Enter description' value={description} onChange={(e) => setDescription(e.target.value)}></Form.Control>\n                        </Form.Group>\n\n                        <Button type='submit' variant='primary'>Update</Button>\n                    </Form>\n                )}\n            </FormContainer>\n        </>\n\n    )\n}\n\nexport default ProductEditScreen\n","import React, { useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Button, Table } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { listOrders } from '../actions/orderActions';\n\nconst OrderListScreen = ({ history }) => {\n    const dispatch = useDispatch();\n\n    const orderList = useSelector(state => state.orderList);\n    const { loading, error, orders } = orderList;\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listOrders());\n        } else {\n            history.push('/login');\n        }\n    }, [dispatch, userInfo, history])\n\n    return (\n        <>\n            <h1>Orders</h1>\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\n                <Table striped bordered hover responsive className='table-sm'>\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>USER</th>\n                            <th>DATE</th>\n                            <th>TOTAL</th>\n                            <th>PAID</th>\n                            <th>DELIVERED</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {orders.map((order) => (\n                            <tr key={order._id}>\n                                <td>{order._id}</td>\n                                <td>{order.user && order.user.name}</td>\n                                <td>{order.createdAt.substring(0,10)}</td>\n                                <td>GH¢{order.totalPrice}</td>\n                                <td>{order.isPaid ? (order.paidAt.substring(0,10)) : (\n                                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                )}</td>\n                                <td>{order.isDelivered ? (order.deliveredAt.substring(0,10)) : (\n                                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                )}</td>\n                                <td>\n                                    <LinkContainer to={`/order/${order._id}`}>\n                                        <Button variant='light' className='btn-sm'>\n                                            Details\n                                        </Button>\n                                    </LinkContainer>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            )}\n        </>\n    )\n}\n\nexport default OrderListScreen\n","import React, { useState, useEffect } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { passwordResetEmail } from '../actions/userActions';\n\nconst ResetPasswordScreen = ({ history }) => {\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const userPasswordResetEmail = useSelector(\n    (state) => state.userPasswordResetEmail\n  );\n  const { loading, error, success } = userPasswordResetEmail;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push('/');\n    }\n\n    if (email && success) {\n      setMessage('Check your inbox for password reset link');\n    }\n  }, [email, success, userInfo, history]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(passwordResetEmail(email));\n  };\n\n  return (\n    <FormContainer>\n      <h1>Reset Password</h1>\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading && <Loader />}\n      {message && <Message variant=\"success\">{message}</Message>}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email and check inbox after submission\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\" className=\"my-3\">\n          Submit\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default ResetPasswordScreen;\n","import React, { useState, useEffect } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { updatePassword } from '../actions/userActions';\n\nconst SetNewPasswordScreen = ({ match, history }) => {\n    const userId = match.params.id;\n\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [message, setMessage] = useState('');\n\n    const dispatch = useDispatch();\n\n    const userUpdatePassword = useSelector(state => state.userUpdatePassword);\n    const { loading, error, success, user } = userUpdatePassword;\n\n    const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/login`);\n        }\n\n        if (userInfo) {\n            history.push('/');\n          }\n    }, [dispatch, history, user, success, error, userInfo])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(updatePassword({ id: userId, password }, match.params.token))\n        }\n    }\n\n    return (\n        <FormContainer>\n            <h1>Enter New Password</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {success && <Message variant='success'>Password updated</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type='password' placeholder='Enter new password' value={password} onChange={(e) => setPassword(e.target.value)}></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='confirmPassword' className='my-3'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control type='password' placeholder='Confirm new password' value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}></Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary' className='my-3'>Reset</Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default SetNewPasswordScreen\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport OrderListScreen from './screens/OrderListScreen';\nimport ResetPasswordScreen from './screens/ResetPasswordScreen';\nimport SetNewPasswordScreen from './screens/SetNewPasswordScreen';\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/resetpassword' component={ResetPasswordScreen} />\n          <Route path='/reset/:id/:token' component={SetNewPasswordScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route path='/admin/productlist' component={ProductListScreen} exact />\n          <Route path='/admin/productlist/:pageNumber' component={ProductListScreen} exact />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n          <Route path='/search/:keyword' component={HomeScreen} exact />\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\n          <Route path='/search/:keyword/page/:pageNumber' component={HomeScreen} exact />\n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}